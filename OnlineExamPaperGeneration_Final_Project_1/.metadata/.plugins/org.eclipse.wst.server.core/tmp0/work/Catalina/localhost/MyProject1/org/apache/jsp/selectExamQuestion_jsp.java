/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-07-08 11:19:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import jtc.Generation.ChooseQuestion;
import jtc.Questions.Question;
import java.util.Iterator;
import java.util.List;

public final class selectExamQuestion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("jtc.Questions.Question");
    _jspx_imports_classes.add("jtc.Generation.ChooseQuestion");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css\\style.css\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div style=\"width: 100%\">\r\n");
      out.write("		");

		String err_msg = (String) request.getAttribute("info");
		if (err_msg != null) {
		
      out.write("\r\n");
      out.write("		<h3 style=\"color: #FF0000;\">\r\n");
      out.write("			");

			out.print(err_msg);
			
      out.write("\r\n");
      out.write("		</h3>\r\n");
      out.write("		");

		} else {

		ChooseQuestion chooseQuestion = (ChooseQuestion) request.getAttribute("Details");
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div style=\"width: 25%; float: left\">.</div>\r\n");
      out.write("		<div style=\"width: 60%; float: left\">\r\n");
      out.write("			<div class=\"box2\">\r\n");
      out.write("				<form action=\"UserController\" method=\"post\">\r\n");
      out.write("					<input type=\"hidden\" name=\"actionRequest\"\r\n");
      out.write("						value=\"exam_question_selected\">\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Institute</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"institute\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getNameOfInstitution());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Branch</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"branch\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getBranch());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Semester</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"semester\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getSemester());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Subject</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"subject\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getSubject());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Paper Code</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"papercode\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getQuestionPaperCode());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Time of Exam</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"time\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getExamTime());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>Date of Exam</td>\r\n");
      out.write("							<td><input type=\"text\" name=\"date\"\r\n");
      out.write("								value=\"");
      out.print(chooseQuestion.getExamDate());
      out.write("\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td colspan=\"2\"><h3 style = \"color : #ffffff; background-color: #212E52\">Please Choose The Questions..... [Difficulty\r\n");
      out.write("									Level = Easy and Marks = 2].</h3></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						List<Question> list = chooseQuestion.getList();
						Iterator<Question> iterator = list.iterator();
						Question question = null;
						while (iterator.hasNext()) {
							question = iterator.next();
							if (question.getDifficulty().equals("Easy")) {
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td><input type=\"checkbox\" id=\"vehicle1\"\r\n");
      out.write("								name=\"easy_question\" value=\"");
      out.print(question.getQuestion());
      out.write("\">\r\n");
      out.write("								<label for=\"vehicle1\"> ");
      out.print(question.getQuestion());
      out.write("</label><br></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						}
						}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("			\r\n");
      out.write("									<td colspan=\"2\"><h3 style = \"color : #ffffff; background-color: #212E52\">Please Choose The Questions..... [Difficulty\r\n");
      out.write("									Level = Medium and Marks = 3].</h3></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						Iterator<Question> iterator1 = list.iterator();
						Question question1 = null;
						while (iterator1.hasNext()) {
							question1 = iterator1.next();
							if (question1.getDifficulty().equals("Medium")) {
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("						\r\n");
      out.write("							<td><input type=\"checkbox\" id=\"vehicle1\"\r\n");
      out.write("								name=\"medium_question\" value=\"");
      out.print(question1.getQuestion());
      out.write("\">\r\n");
      out.write("								<label for=\"vehicle1\"> ");
      out.print(question1.getQuestion());
      out.write("</label><br></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						}
						}
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td colspan=\"2\"><h3 style = \"color : #ffffff; background-color: #212E52\">Please Choose The Questions..... [Difficulty\r\n");
      out.write("									Level = Difficult and Marks = 5].</h3></td>\r\n");
      out.write("						\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						Iterator<Question> iterator3 = list.iterator();
						Question question3 = null;
						while (iterator3.hasNext()) {
							question3 = iterator3.next();
							if (question3.getDifficulty().equals("Difficult")) {
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td><input type=\"checkbox\" id=\"vehicle1\"\r\n");
      out.write("								name=\"defficult_question\" value=\"");
      out.print(question3.getQuestion());
      out.write("\">\r\n");
      out.write("								<label for=\"vehicle1\"> ");
      out.print(question3.getQuestion());
      out.write("</label><br></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

						}
						}
						}
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td colspan=\"2\"><br><input type=\"submit\" value=\"SUBMIT\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div style=\"width: 15%; float: left\">.</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
